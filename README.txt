תרגיל 4

מגישות: 
אודליה תמר שמש ת.ז 316338896
הדס מימון ת.ז 324019744  

הסבר כללי של התרגיל:
בתרגיל זה נבנה את המשחק "שישה צבעים" בגרסת המשושים תוך שימוש בספריה הגרפית. המשחק כולל שני שחקנים – אנושי וממוחשב.

רשימה של הקבצים שיצרנו, עם הסבר קצר: 
Algorithm- המחלקה אחראית לחישוב האלגוריתם BFS וכן חישובים עזר נוספים שנועדו לשחקנים האחרים.
BaseComputer- מחלקה אבסטרקטית אשר ממנה יורשים 3 - מחלקות שונות:
1). GlobalComputer- מחלקה עבור שחקן חמדן גלובלי.
2). LocalComputer - מחלקה עבור שחקן חמדן מקומי.
3). RegularComputer- שחקן רנדומלי, שבוחר רנדומלית את אחד הצבעים האפשריים.
Board - מחלקה מחזיקה "לוח" - ווקטור של משושים.
Hexagon- המחלקה מחזיקה ממבר משושה מסוג sf::CircleShape m_hexagon וכן מחזיקה את הצבע שלו.
Cell- המחלקה מכילה ממבר מסוג Hexagon , ועבורו מחזיקה ווקטור של שכניו.
Controller - המחלקה אחרית על ניהול המשחק והחזקת האוביקטים השונים.
Display - המחלקה מציגה את האפשרויות לבחירת שחקן : 1- גלובלי, 2- מקומי, 3- רנדומלי.
Menu - המחלקה מציגה את הצבעים שאותם ניתן לבחור.
Player - המחלקה של המשתמש.
Utilities - מכיל את הקבועים של התוכנית.

מבני נתונים עיקריים ותפקידיהם:
מחלקת Cell מכילה את מחלקת Hexagon ושומרת עבור כל Hexagon ווקטור של שכניו וה- Board מכיל ווקטור של Cell.
ל - Controller יש שני ווקטורים האחד הוא std::vector<std::shared_ptr<Cell>> m_userVec וכן std::vector<std::shared_ptr<Cell>> m_computerVec 
אליהם נכנסים ע"י האלגורים BFS שנמצא במחלקת Algorithm  שבה נעשה שימוש בוקטור של השכנים, כל משושה ומספק מסלול ארוך ביותר עבור צבע מסוים,
 ועבור אותו הצבע נכנסים כל המשושים שיש להם את הצבע זהה אליו.

אלגוריתמים הראויים לציון:
BFS - עבור השחקן הגלובלי
הגרלת צבע עבור מסלול- שחקן רנדומלי.
מעבר על Cell בודד ובדיקה איזה צבע יתן הכי הרבה אך ורק מ - 6 שכניו בלבד! (בשונה מ- BFS ששם עוברים עבור כל שכן בודקים את שכניו ואת שכני שכניו)- עבור השחקן המקומי.

תיכון (design): 
המחלקות : GlobalComputer, LocalComputer, RegularComputer יורשות מהמחלקה BaseComputer.
Cell מכיל את Hexagon.
וכן ווקטורים נוספים שכנתבו למעלה.

באגים ידועים:


הערות אחרות:

